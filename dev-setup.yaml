---
- hosts: all
  tasks:
  - name: Define global gitignore 
    copy:
      src: .gitignore
      dest: "~/.gitignore"
  - name: Setup Git global ignore
    shell: git config --global --replace-all core.excludesfile '~/.gitignore'
  - name: Define gitprompt options
    copy:
      src: config/alias
      dest: "~/.common_aliases"
  - name: Setup common aliases
    shell: |
      if [ -f ~/.bash_aliases ]; then
        nb_definitions=`grep distUpgrade ~/.bash_aliases | wc -l`
        if [ $nb_definitions -eq 0 ]; then
          cat ~/.common_aliases >> ~/.bash_aliases
        fi
      fi
      rm -f ~/.common_aliases
      
      exit 0
  - name: Define git aliases
    copy:
      src: config/gitconfig
      dest: "~/git.aliases"
  - name: Setup git aliases
    shell: |
      if [ -f ~/.gitconfig ]; then
        nb_definitions=`grep show-tree ~/.gitconfig | wc -l`
        if [ $nb_definitions -gt 0 ]; then
          echo "Git aliases already defined"
        else
          cat ~/git.aliases >> ~/.gitconfig
        fi
      fi
      rm -f ~/git.aliases
      
      exit 0
  - name: Define bash 4 functions 
    copy:
      src: bash4rc
      dest: "~/.bash4rc"
  - name: Setup bash 4 options
    shell: |
      nb_definitions=`grep bash4rc ~/.bashrc | wc -l`
      if [ $nb_definitions -eq 0 ]; then
        echo "if [ -f ~/.bash4rc ]; then source ~/.bash4rc;  fi" >> ~/.bashrc
      fi
      
      exit 0      
  - name: Create ssh-keygen if it does not already exist
    shell: |
      if [ ! -f ~/.ssh/id_rsa ]; then
        ssh-keygen -t rsa -q -N ''
      fi
      exit 0
    args:
      executable: /bin/bash
  
  - name: Source kubectl completion
    shell: |
      if [ -f ~/.bashrc ]; then
        nb_definitions=`grep 'kubectl completion' ~/.bashrc | wc -l`
        if [ $nb_definitions -eq 0 ]; then
          echo "source <(kubectl completion bash)" ~/.bashrc
          echo "source <(kubectl completion bash | sed s/kubectl/k/g)" ~/.bashrc
        fi
      fi

      exit 0

# - hosts: master
#   become: yes
#   tasks:
#   - name: Add current user to VBox group to provide access to shared folders
#     shell: adduser $SUDO_USER vboxsf

- hosts: dev
  tasks:
  - name: Setup AWS CLI autocompletion
    shell: |
      local_path=`which aws_completer`
      complete -C '${local_path}' aws;
      exit 0
  - name: Download Kube-ps1 prompt
    git:
      repo: 'https://github.com/jonmosco/kube-ps1.git'
      dest: ~/prompt/kube-ps1
  - name: Add a new PS1 dedicated to Kubernetes
    shell: |
      nb_definitions=`grep 'kube-ps1.sh' ~/.bashrc | wc -l`
      if [ $nb_definitions -eq 0 ]; then
        echo "source ~/prompt/kube-ps1/kube-ps1.sh" >> ~/.bashrc
      fi 
      exit 0
  - name: Download git prompt
    git:
      repo: 'https://github.com/OlivierDupre/bash-git-prompt.git'
      dest: ~/prompt/bash-git-prompt
  - name: Define gitprompt options
    copy:
      src: gitprompt
      dest: "~/prompt/bash-git-prompt/custom-gitprompt.sh"
  - name: Source gitprompt
    shell: |
      nb_definitions=`grep 'custom-gitprompt' ~/.bashrc | wc -l`
      if [ $nb_definitions -eq 0 ]; then
        echo "source ~/prompt/bash-git-prompt/custom-gitprompt.sh" >> ~/.bashrc
      fi  

      exit 0
  # Alternate prompt
  # - name: Download Polyglot prompt
  #   git:
  #     repo: 'https://github.com/agkozak/polyglot.git'
  #     dest: ~/prompt/polyglot
  # - name: Source gitprompt
  #   shell: |
  #     nb_definitions=`grep 'polyglot' ~/.bashrc | wc -l`
  #     if [ $nb_definitions -eq 0 ]; then
  #       echo "source ~/prompt/polyglot/polyglot.sh" >> ~/.bashrc
  #     fi  

  #     exit 0
  # - name: Download Polyglot-Kube-ps1 prompt
  #   git:
  #     repo: 'https://github.com/agkozak/polyglot-kube-ps1.git'
  #     dest: ~/prompt/polyglot-kube-ps1
  # - name: Source polyglot-kube-ps1
  #   shell: |
  #     nb_definitions=`grep 'polyglot-kube-ps1' ~/.bashrc | wc -l`
  #     if [ $nb_definitions -eq 0 ]; then
  #       echo "source ~/prompt/polyglot-kube-ps1/polyglot-kube-ps1.sh" >> ~/.bashrc
  #     fi  

  #     exit 0

